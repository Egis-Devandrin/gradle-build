// First, apply the publishing plugin
buildscript {
    repositories {
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath("com.gradle.publish:plugin-publish-plugin:0.9.9") {
            transitive = true
        }
        classpath('org.ajoberstar:grgit:1.1.0') {
            transitive = true
        }
    }
}

apply plugin: "com.gradle.plugin-publish"
apply plugin: 'groovy'
apply plugin: 'idea'
// Apply other plugins here, e.g. java plugin for a plugin written in java or
// the groovy plugin for a plugin written in groovy

// If your plugin has any external java dependencies, Gradle will attempt to
// downloaded them from JCenter for anyone using the plugins DSL
// so you should probably use JCenter for dependency resolution in your own
// project.
repositories {
    jcenter()
}


dependencies {
    compile gradleApi()
    compile localGroovy()
    compile('org.ajoberstar:grgit:1.1.0') {
        transitive = true
    }
    compile("jp.classmethod.aws:gradle-aws-plugin:0.+") {
        transitive = true
    }
}

// Unless overridden in the pluginBundle config DSL, the project version will
// be used as your plugin version when publishing
version = "3.5.$System.env.CIRCLE_BUILD_NUM"
group = "com.egis"

// The configuration example below shows the minimum required properties
// configured to publish your plugin to the plugin portal
pluginBundle {
    website = 'https://www.papertrail.co.za/'
    vcsUrl = 'https://github.com/egis/gradle-build'
    description = 'Master build script for Egis Java projects'
    tags = ['dev']

    plugins {
        EgisJavaBuild {
            id = 'com.egis.gradle'
            displayName = 'Egis Master Gradle plugin'
            description = description
        }
    }
}

task setupPluginUpload << {
    // KEY and SECRET are defined in CircleCI project
    def key = System.env.KEY
    def secret = System.env.SECRET

    if (!key || !secret) {
        throw new RuntimeException("KEY and/or SECRET are not defined environment variables")
    }

    System.properties.setProperty("gradle.publish.key", key)
    System.properties.setProperty("gradle.publish.secret", secret)
}

tasks.publishPlugins.dependsOn tasks.setupPluginUpload